 <% include header %>
<h1>sports room</h1>

<section id="overlay">
  <h2>What is your username?</h2>
  <form>
    <input type="text" id="name" placeholder="Name" autocomplete="off">
    <input type="submit" id="setName" value="confirm">
  </form>
</section>

<section id="container">
  <div id="user-window">
    <h3>Users in room</h3>
    <ul id="users">

    </ul>
  </div>
  <div id="chat-container">
    <div id="chat-window">
      <div id="output"></div>
      <div id="feedback"></div>
    </div>
    <form>
      <input type="text" id="message" autocomplete="off" placeholder="Message" focus />
      <input type="submit" id="send" name="" value="Stuur">
    </form>
  </div>
</section>


<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io('/sports');

  let userName;
  let myId;

  const message = document.getElementById('message');
  btn = document.getElementById('send'),
    output = document.getElementById('output'),
    handle = document.getElementById('name'),
    setName = document.getElementById('setName'),
    feedback = document.getElementById('feedback'),
    form = document.querySelectorAll('form'),
    overlay = document.getElementById('overlay'),
    users = document.getElementById('users')

  form.forEach(function(form) {
    form.addEventListener('submit', function(e) {
      e.preventDefault()
    })
  })

  socket.on('connect', function() {
    console.log('connection to server made');
    // console.log(socket.io.nsps./sports.id);

    myId = socket.id;
  })

  socket.on('newName', function(id, name) {
    console.log("new username for user: " + id + " name: " + name);

    userName = name

    if (id == myId) {
      console.log('hij runt deze');
      feedback.innerHTML = '<p><em>' + userName + ' Joined the room.</em></p>';
    } else {
      let createLi = document.createElement('li');
      let newUser = document.createTextNode(userName);
      createLi.appendChild(newUser)
      users.appendChild(createLi);
      feedback.innerHTML = '<p><em>' + name + ' Joined the room.</em></p>';
      console.log('nu runt hij toch deze');
    }
  });

  socket.on('userLeft', function(name) {
    console.log('user disconnected ' + name);
    feedback.innerHTML = '<p><em>' + name + ' left the room.</em></p>';
  })


  setName.addEventListener('click', function() {
    socket.emit('setUserName', handle.value)
    console.log('sending username ' + handle.value);
    overlay.style.display = 'none'
  })

  btn.addEventListener('click', function() {
    socket.emit('chat', {
      message: message.value,
      handle: handle.value
    });
    message.value = ''
  })

  message.addEventListener('keypress', function() {
    socket.emit('typing', handle.value)
  })

  socket.on('newUser', function(id) {
    console.log("new user detected:" + id);
  })

  socket.on('chat', function(data) {

    feedback.innerHTML = "";
    output.innerHTML += '<p><strong>' + data.handle + ': </strong>' + data.message + '</p>';

  });

  socket.on('typing', function(data) {
    feedback.innerHTML = '<p><em>' + data + ' is typing a message...</em></p>';
  });
</script>
<% include footer %>
